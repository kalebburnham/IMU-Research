close all;
clear;
clc;

addpath('../quaternion_library');
addpath('..');
load('../straight walk, 1000 steps.mat');

% This script tests if the quaternion are correct by calculating the
% estimations and comparing them to the quaternions generated by the
% dcm2quat function

%% Settings
period = 1/100;
beta = 1;
sampleSize = 3000;
pitchCorrection = 0.0875;
rollCorrection = 0.5790;
yawCorrection = 0;


%% Initialization
rotm = euler2rotMat(pitchCorrection, rollCorrection, yawCorrection);
Quaternion = rotMat2quatern(rotm);
AHRS = MadgwickAHRS('SamplePeriod', period, 'Beta', beta, 'Quaternion', Quaternion);

quaternion = zeros(length(sampleSize), 4);
groundTruthQuat = zeros(length(sampleSize), 4);

%% Function

for t = 1:sampleSize
    AHRS.Update(Gyr(t,:), Acc(t,:), Mag(t,:));
    quaternion(t,:) = AHRS.Quaternion;
    groundTruthQuat(t,:) = dcm2quat(DCM(:,:,t));
    
    quaternion(t,2) = -1 * quaternion(t,2);
    quaternion(t,3) = -1 * quaternion(t,3);
    quaternion(t,4) = -1 * quaternion(t,4);
end

%% Plot Results

figure;
hold on;
plot(1:t, groundTruthQuat(:,1), 'r');
plot(1:t, quaternion(:,1), 'g');
title('W');
legend('Ground Truth', 'Estimated');
hold off;

figure;
hold on;
plot(1:t, quaternion(:,2), 'g');
plot(1:t, groundTruthQuat(:,2), 'r');
title('X');
legend('Ground Truth', 'Estimated');
hold off;

figure;
hold on;
plot(1:t, groundTruthQuat(:,3), 'r');
plot(1:t, quaternion(:,3), 'g');
title('Y');
legend('Ground Truth', 'Estimated');
hold off;

figure;
hold on;
plot(1:t, groundTruthQuat(:,4), 'r');
plot(1:t, quaternion(:,4), 'g');
title('Z');
legend('Ground Truth', 'Estimated');
hold off;